{"version":3,"sources":["serviceWorker.js","config/Fire.js","components/ProductWrapper/ProductItem/ProductItem.js","components/ProductWrapper/products.js","components/ProductWrapper/ProductWrapper.js","Home.js","AddProduct.js","components/Recipes/Detail/Ingredients.js","components/Recipes/Detail/RecipesDetail.js","components/Recipes/Recipes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ProductItem","props","react_default","a","createElement","Fragment","name","quantity","type","products","id","ProductWrapper","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","userId","localStorage","getItem","fridge","Products","database","ref","concat","_this2","reload","on","snapshot","val","downloadedFridge","forEach","product","push","setState","getDataFromDatabase","className","scope","map","ProductWrapper_ProductItem_ProductItem","assign","key","React","Component","Home","logout","bind","assertThisInitialized","auth","signOut","components_ProductWrapper_ProductWrapper","AddProduct","_this3","disabled","selected","value","placeholder","onClick","event","preventDefault","document","getElementById","indexInState","findIndex","item","toLowerCase","test","indexOfProduct","Number","parseInt","forceUpdate","update","alert","Ingredients","RecipesDetail","recipeId","recipe","description","ingredients","axios","get","then","response","data","ingredient","Recipes_Detail_Ingredients","Recipes","recipes","nameSearchParam","handleChangeSearchParam","handleClick","console","log","labels","recipesTableRows","react_router_dom","style","textDecoration","color","to","react_router","path","render","Recipes_Detail_RecipesDetail","onChange","target","apps","length","App","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","EmailAuthProvider","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","user","setItem","uid","role","aria-label","removeItem","currentUser","displayName","exact","component","Add","Search","StyledFirebaseAuth_default","firebaseAuth","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mTAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,mJCLSC,EADFC,IAASC,cAVP,CACXC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,wCCIIC,EAXK,SAACC,GAAD,OAAYC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACxBH,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKH,EAAMK,MACXJ,EAAAC,EAAAC,cAAA,UAAKH,EAAMM,UACXL,EAAAC,EAAAC,cAAA,UAAKH,EAAMO,UCoERC,EA3EE,CACb,CACIC,GAAI,EACJJ,KAAM,aACNE,KAAM,UAEV,CACIE,GAAI,EACJJ,KAAM,YACNE,KAAM,QAGV,CACIE,GAAI,EACJJ,KAAM,SACNE,KAAM,UAEV,CACIE,GAAI,EACJJ,KAAM,UACNE,KAAM,UAEV,CACIE,GAAI,EACJJ,KAAM,UACNE,KAAM,cAEV,CACIE,GAAI,EACJJ,KAAM,WACNE,KAAM,cAEV,CACIE,GAAI,EACJJ,KAAM,UACNE,KAAM,UAEV,CACIE,GAAI,EACJJ,KAAM,YACNE,KAAM,UAEV,CACIE,GAAI,EACJJ,KAAM,QACNE,KAAM,UAEV,CACIE,GAAI,GACJJ,KAAM,QACNE,KAAM,YAEV,CACIE,GAAI,GACJJ,KAAM,aACNE,KAAM,QAEV,CACIE,GAAI,GACJJ,KAAM,QACNE,KAAM,UAEV,CACIE,GAAI,GACJJ,KAAM,MACNE,KAAM,UAEV,CACIE,GAAI,GACJJ,KAAM,UACNE,KAAM,SCCCG,qBA1DX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAPJI,MAAQ,CACJC,OAAQC,aAAaC,QAAQ,QAC7BC,OAAQ,GACRd,SAAUe,GAKVZ,EAAKa,SAAWnC,EAAKmC,WAAWC,IAAhB,iBAAAC,OAAqCf,EAAKO,MAAMC,SAFtDR,qFAKQ,IAAAgB,EAAAb,KACQ,OAAtBA,KAAKI,MAAMC,QAAiBlC,OAAOC,SAAS0C,SAChDd,KAAKU,SAASK,GAAG,QAAS,SAACC,GACvB,IAAItB,EAAWsB,EAASC,MACpBC,EAAmB,GACN,OAAbxB,IACJA,EAASyB,QAAQ,SAAAC,GACbF,EAAiBG,KAAK,CAClB1B,GAAIyB,EAAQzB,GACZJ,KAAM6B,EAAQ7B,KACdC,SAAU4B,EAAQ5B,SAClBC,KAAM2B,EAAQ3B,SAGtBoB,EAAKS,SAAS,CACVd,OAAQU,oDAMhBlB,KAAKuB,uDAIL,OACIpC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,aACXrC,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,OACXrC,EAAAC,EAAAC,cAAA,SAAOmC,UAAU,mCACbrC,EAAAC,EAAAC,cAAA,SAAOmC,UAAU,gBACjBrC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIoC,MAAM,OAAV,kBACAtC,EAAAC,EAAAC,cAAA,MAAIoC,MAAM,OAAV,mBACAtC,EAAAC,EAAAC,cAAA,MAAIoC,MAAM,OAAV,eAIAzB,KAAKI,MAAMI,OAAOkB,IACd,SAACN,GAAD,OACIjC,EAAAC,EAAAC,cAACsC,EAAD7B,OAAA8B,OAAA,CAAaC,IAAKT,EAAQzB,IAAQyB,iBArD7CU,IAAMC,YCoBpBC,cArBX,SAAAA,EAAY9C,GAAO,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgC,IACfnC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkC,GAAA7B,KAAAH,KAAMd,KACD+C,OAASpC,EAAKoC,OAAOC,KAAZpC,OAAAqC,EAAA,EAAArC,CAAAD,IAFCA,wEAOftB,EAAK6D,OAAOC,2CAIZ,OACIlD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiD,EAAD,cAdGP,8BCsGJQ,qBA9FX,SAAAA,IAAc,IAAA1C,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,IACV1C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyC,GAAApC,KAAAH,QAPJI,MAAQ,CACJC,OAAQC,aAAaC,QAAQ,QAC7BC,OAAQ,GACRd,SAAUe,GAKVZ,EAAKa,SAAWnC,EAAKmC,WAAWC,IAAhB,iBAAAC,OAAqCf,EAAKO,MAAMC,SAFtDR,qFAKQ,IAAAgB,EAAAb,KAElBA,KAAKU,SAASK,GAAG,QAAS,SAACC,GACvB,IAAItB,EAAWsB,EAASC,MACpBC,EAAmB,GACN,OAAbxB,IACJA,EAASyB,QAAQ,SAAAC,GACbF,EAAiBG,KAAK,CAClB1B,GAAIyB,EAAQzB,GACZJ,KAAM6B,EAAQ7B,KACdC,SAAU4B,EAAQ5B,SAClBC,KAAM2B,EAAQ3B,SAGtBoB,EAAKS,SAAS,CACVd,OAAQU,oDAMhBlB,KAAKuB,uDAGA,IAAAiB,EAAAxC,KACL,OACIb,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,aAEXrC,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,OACXrC,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,YACXrC,EAAAC,EAAAC,cAAA,UAAQI,KAAK,OAAOE,GAAG,OAAO6B,UAAU,gBACpCrC,EAAAC,EAAAC,cAAA,UAAQoD,UAAQ,EAACC,UAAQ,GAAzB,mBAEI1C,KAAKI,MAAMV,SAASgC,IAAI,SAAAN,GAAO,OAC3BjC,EAAAC,EAAAC,cAAA,UAAQsD,MAAOvB,EAAQ7B,KACfsC,IAAKT,EAAQzB,IAAKyB,EAAQ7B,KADlC,KAC0C6B,EAAQ3B,UAKlEN,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,YACXrC,EAAAC,EAAAC,cAAA,SAAOM,GAAG,WAAWiD,YAAY,kBAAQpB,UAAU,kBAEvDrC,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,YACXrC,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAAS+B,UAAU,0BAA0BqB,QAAS,SAAAC,GAC/DA,EAAMC,iBACN,IAAMxD,EAAOyD,SAASC,eAAe,QAAQN,MACvCnD,EAAWwD,SAASC,eAAe,YAAYN,MACrD,GAAa,oBAATpD,EAAJ,CACA,IAAM2D,EAAeV,EAAKpC,MAAMV,SAASyD,UAAU,SAAAC,GAAI,OAAIA,EAAK7D,KAAK8D,gBAAkB9D,EAAK8D,gBACtF1D,EAAK6C,EAAKpC,MAAMV,SAASwD,GAAcvD,GACvCF,EAAO+C,EAAKpC,MAAMV,SAASwD,GAAczD,KAC/C,IAA+B,IAA3B,QAAQ6D,KAAK9D,IAAoC,IAAbA,EAAxC,CAIA,IAAM+D,EAAiBf,EAAKpC,MAAMI,OAAO2C,UAAU,SAAAC,GAAI,OAAIA,EAAK7D,KAAK8D,gBAAkB9D,EAAK8D,iBACpE,IAApBE,GACAf,EAAKpC,MAAMI,OAAOa,KAAK,CACnB1B,GAAIA,EACJJ,KAAMA,EACNC,SAAUgE,OAAOC,SAASjE,GAC1BC,KAAMA,IAEV+C,EAAKkB,cACLlB,EAAK9B,SAASiD,OAAOnB,EAAKpC,MAAMI,UAGhCgC,EAAKpC,MAAMI,OAAO+C,GAAgB/D,UAAYgE,OAAOC,SAASjE,GAC9DgD,EAAKkB,cACLlB,EAAK9B,SAASiD,OAAOnB,EAAKpC,MAAMI,SAEpCwC,SAASC,eAAe,YAAYN,MAAQ,QAnBxCiB,MAAM,8BATd,4BAzDH9B,IAAMC,6BCKhB8B,SAPK,SAAC3E,GAAD,OAChBC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGmC,UAAU,IAAItC,EAAMK,KAAvB,KAA+BL,EAAMM,SAArC,KAAiDN,EAAMO,UCwCpDqE,qBAxCX,SAAAA,EAAY5E,GAAO,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8D,IACfjE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgE,GAAA3D,KAAAH,KAAMd,KACDkB,MAAQ,CACT2D,SAAU7E,EAAMS,GAChBqE,OAAQ,CACJzE,KAAM,GACN0E,YAAa,GACbC,YAAa,KAKrBC,IAAMC,IAAI,iCAAmCvE,EAAKO,MAAM2D,UACnDM,KAAK,SAAAC,GACFzE,EAAKyB,SAAS,CAAC0C,OAAQM,EAASC,SAdzB1E,wEAqBf,OACIV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKW,KAAKI,MAAM4D,OAAOzE,MACvBJ,EAAAC,EAAAC,cAAA,SAAIW,KAAKI,MAAM4D,OAAOC,aACtB9E,EAAAC,EAAAC,cAAA,UAEQW,KAAKI,MAAM4D,OAAOE,YAAYxC,IAAI,SAAA8C,GAAU,OACxCrF,EAAAC,EAAAC,cAACoF,EAAgBD,MAI7BrF,EAAAC,EAAAC,cAAA,UAAQwD,QAAS,kBAAMe,MAAM,qBAA7B,uBACAzE,EAAAC,EAAAC,cAAA,UAAQwD,QAAS,kBAAMe,MAAM,qBAA7B,8CAlCY9B,IAAMC,YCgGnB2C,cArFX,SAAAA,EAAYxF,GAAO,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0E,IACf7E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4E,GAAAvE,KAAAH,KAAMd,KAXVkB,MAAQ,CACJuE,QAAS,CACL,CACIhF,GAAI,EACJJ,KAAM,KAGdqF,gBAAiB,IAMjB/E,EAAKgF,wBAA0BhF,EAAKgF,wBAAwB3C,KAA7BpC,OAAAqC,EAAA,EAAArC,CAAAD,IAC/BA,EAAKiF,YAAcjF,EAAKiF,YAAY5C,KAAjBpC,OAAAqC,EAAA,EAAArC,CAAAD,IAGnBsE,IAAMC,IAAI,qCACLC,KAAK,SAAAC,GACFzE,EAAKyB,SAAS,CAACqD,QAASL,EAASC,SAT1B1E,6EAcL,IAAAgB,EAAAb,KACV+E,QAAQC,IAAI,yBACuB,KAA/BhF,KAAKI,MAAMwE,gBACXhB,MAAM,qCAENO,IAAMC,IAAI,iDAAmDpE,KAAKI,MAAMwE,iBACnEP,KAAK,SAAAC,GACFzD,EAAKS,SAAS,CAACqD,QAASL,EAASC,0CAM7C,IAAMU,EAEa,qBAFbA,EAGuB,uBAGvBC,EAAmBlF,KAAKI,MAAMuE,QAAQjD,IAAI,SAACsC,EAAQnC,GAAT,OAC5C1C,EAAAC,EAAAC,cAAA,MAAIwC,IAAKA,GACL1C,EAAAC,EAAAC,cAAA,UAAK2E,EAAOzE,MACZJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAMC,MAAO,CAACC,eAAgB,OAAQC,MAAO,SAAUC,GAAE,kBAAA3E,OAAoBoD,EAAOrE,IAAMA,GAAIqE,EAAOrE,IACjGR,EAAAC,EAAAC,cAAA,UAAQ+F,MAAO,CAACC,eAAgB,OAAQC,MAAO,SAAU9D,UAAU,2BAA2ByD,IAElG9F,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOC,KAAI,qBACJC,OAAQ,SAACxG,GAAD,OACJC,EAAAC,EAAAC,cAACsG,EAAD7F,OAAA8B,OAAA,GAAmB1C,EAAnB,CAA0BS,GAAIqE,EAAOrE,aAM5D,OACIR,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,aACXrC,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,KACIhG,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,aACXrC,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,OACXrC,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,YACXrC,EAAAC,EAAAC,cAAA,SAAOmC,UAAU,eAAemB,MAAO3C,KAAKI,MAAMwE,gBAC3CgB,SAAU5F,KAAK6E,2BAE1B1F,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,YACXrC,EAAAC,EAAAC,cAAA,UAAQ+F,MAAO,CAACC,eAAgB,OAAQC,MAAO,SAAU9D,UAAU,0BAC3DqB,QAAS7C,KAAK8E,aAAcG,KAG5C9F,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,OACXrC,EAAAC,EAAAC,cAAA,SAAOmC,UAAU,SACbrC,EAAAC,EAAAC,cAAA,aACC6F,wDAeLpC,GACpB9C,KAAKsB,SAAS,CAACsD,gBAAiB9B,EAAM+C,OAAOlD,oDALxBoB,GACrBH,MAAM,uCAAyCG,EAAW,uCAxF5CjC,IAAMC,WCQvBvD,IAASsH,KAAKC,QACfvH,IAASC,cAAc,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CAmGAgH,6MA7FX5F,MAAQ,CAAC6F,YAAY,KACrBC,SAAW,CACPC,WAAY,QACZC,cAAe,CACX5H,IAAS4D,KAAKiE,mBAAmBC,YACjC9H,IAAS4D,KAAKmE,qBAAqBD,YACnC9H,IAAS4D,KAAKoE,kBAAkBF,aAEpCG,UAAW,CACPC,cAAe,kBAAM,OAI7BC,kBAAoB,WAChBnI,IAAS4D,OAAOwE,mBAAmB,SAAAC,GAC/BhH,EAAKyB,SAAS,CAAC2E,aAAcY,IAC7BvG,aAAawG,QAAQ,OAAQD,EAAKE,KAClChC,QAAQC,IAAI,OAAQ6B,8EAKxB,OAAQ1H,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,OACfrC,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,QACXrC,EAAAC,EAAAC,cAAA,MAAImC,UAAU,WACVrC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,aAGZF,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,WACNxB,KAAKI,MAAM6F,WACR9G,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,KACIhG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,KACArG,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,YAAYwF,KAAK,QAAQC,aAAW,iBAE/C9H,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAAS+B,UAAU,wBAC5BrC,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAMC,MAAO,CAACC,eAAgB,OAAQC,MAAO,SACvCC,GAAG,YADT,mBAGJpG,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAAS+B,UAAU,wBAC5BrC,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAMC,MAAO,CAACC,eAAgB,OAAQC,MAAO,SAAUC,GAAG,gBAA1D,mCAGApG,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAAS+B,UAAU,wBACpCrC,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAMC,MAAO,CAACC,eAAgB,OAAQC,MAAO,SAAUC,GAAG,gBAA1D,gCAEIpG,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAAS+B,UAAU,wBACpCrC,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAMC,MAAO,CAACC,eAAgB,OAAQC,MAAO,SAAUC,GAAG,kBAA1D,mCAEApG,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAAS+B,UAAU,0BAA0BqB,QAAS,WAC/DrE,IAAS4D,OAAOC,UAChB/B,aAAa4G,WAAW,UAF5B,aAQJ/H,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,YAAYwF,KAAK,QAAQC,aAAW,kBAGvD9H,EAAAC,EAAAC,cAAA,mBAAWb,IAAS4D,OAAO+E,YAAYC,YAAvC,KACIjI,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAO6B,OAAK,EAAC5B,KAAK,WAAW6B,UAAWtF,IACxC7C,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAO6B,OAAK,EAAC5B,KAAK,eAAe6B,UAAWtF,IAC5C7C,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAO6B,OAAK,EAAC5B,KAAK,eAAe6B,UAAWC,IAC5CpI,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOC,KAAK,iBAAiB6B,UAAWE,OAMhDrI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoI,EAAArI,EAAD,CACI8G,SAAUlG,KAAKkG,SACfwB,aAAclJ,IAAS4D,mBAnFrCL,aCnBlB4F,IAASjC,OAAOvG,EAAAC,EAAAC,cAACuI,EAAD,MAAS5E,SAASC,eAAe,SX0H3C,kBAAmB4E,WACrBA,UAAUC,cAAcC,MAAM1D,KAAK,SAAA2D,GACjCA,EAAaC","file":"static/js/main.93c285cd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyB0oNIdCxxr6QyniIO9e1luNzR6giC4nDY\",\r\n    authDomain: \"efridge-5256e.firebaseapp.com\",\r\n    databaseURL: \"https://efridge-5256e.firebaseio.com\",\r\n    projectId: \"efridge-5256e\",\r\n    storageBucket: \"efridge-5256e.appspot.com\",\r\n    messagingSenderId: \"630139984649\",\r\n    appId: \"1:630139984649:web:d8a2d5685d0270ec\"\r\n};\r\n\r\nconst fire = firebase.initializeApp(config);\r\nexport default fire;","import React from 'react';\r\n\r\nconst ProductItem = (props) => (<>\r\n        <tbody>\r\n        <tr>\r\n            <td>{props.name}</td>\r\n            <td>{props.quantity}</td>\r\n            <td>{props.type}</td>\r\n        </tr>\r\n        </tbody>\r\n    </>\r\n);\r\n\r\nexport default ProductItem;","const products = [\r\n    {\r\n        id: 1,\r\n        name: \"Parówka\",\r\n        type: \"sztuka\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Pieczarka\",\r\n        type: \"gram\"\r\n    },\r\n\r\n    {\r\n        id: 3,\r\n        name: \"Cebula\",\r\n        type: \"sztuka\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Pomidor\",\r\n        type: \"sztuka\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Czosnek\",\r\n        type: \"ząbek\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Ryż\",\r\n        type: \"opakowanie\"\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Papryka\",\r\n        type: \"sztuka\"\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"Ogórek\",\r\n        type: \"sztuka\"\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"Jajko\",\r\n        type: \"sztuka\"\r\n    },\r\n    {\r\n        id: 10,\r\n        name: \"Mleko\",\r\n        type: \"mililitr\"\r\n    },\r\n    {\r\n        id: 11,\r\n        name: \"Masło\",\r\n        type: \"gram\"\r\n    },\r\n    {\r\n        id: 12,\r\n        name: \"Filet\",\r\n        type: \"sztuka\"\r\n    },\r\n    {\r\n        id: 13,\r\n        name: \"Sos\",\r\n        type: \"sztuka\"\r\n    },\r\n    {\r\n        id: 14,\r\n        name: \"Makaron\",\r\n        type: \"gram\"\r\n    },\r\n\r\n];\r\n\r\nexport default products;","import React from 'react';\r\nimport ProductItem from './ProductItem/ProductItem';\r\nimport Products from './products';\r\nimport fire from '../../config/Fire';\r\nimport './ProductWrapper.css'\r\n\r\nclass ProductWrapper extends React.Component {\r\n    state = {\r\n        userId: localStorage.getItem('user'),\r\n        fridge: [],\r\n        products: Products,\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.database = fire.database().ref(`fridge/userId/${this.state.userId}`);\r\n    }\r\n\r\n    getDataFromDatabase() {\r\n        if (this.state.userId === null) window.location.reload();\r\n        this.database.on('value', (snapshot) => {\r\n            let products = snapshot.val();\r\n            let downloadedFridge = [];\r\n            if (products === null) return;\r\n            products.forEach(product => {\r\n                downloadedFridge.push({\r\n                    id: product.id,\r\n                    name: product.name,\r\n                    quantity: product.quantity,\r\n                    type: product.type,\r\n                })\r\n            });\r\n            this.setState({\r\n                fridge: downloadedFridge\r\n            });\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getDataFromDatabase();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Rzeczy w Twojej lodówce:</h1>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <table className=\"table table-bordered table-dark\">\r\n                            <tbody className=\"text-success\">\r\n                            <tr>\r\n                                <th scope=\"col\">Nazwa produktu</th>\r\n                                <th scope=\"col\">Ilość</th>\r\n                                <th scope=\"col\">Jednostka</th>\r\n                            </tr>\r\n                            </tbody>\r\n                            {\r\n                                this.state.fridge.map(\r\n                                    (product) => (\r\n                                        <ProductItem key={product.id} {...product}/>\r\n                                    )\r\n                                )\r\n                            }\r\n                        </table>\r\n                    </div>\r\n\r\n                </div>\r\n            </>)\r\n    };\r\n}\r\n\r\nexport default ProductWrapper;","import React, { Component } from 'react';\r\nimport fire from './config/Fire';\r\nimport ProductWrapper from \"./components/ProductWrapper/ProductWrapper\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n\r\n    logout() {\r\n        fire.auth().signOut();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProductWrapper/>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './AddProduct.css';\r\nimport fire from './config/Fire';\r\nimport Products from \"./components/ProductWrapper/products\";\r\n\r\nclass AddProduct extends React.Component {\r\n    state = {\r\n        userId: localStorage.getItem('user'),\r\n        fridge: [],\r\n        products: Products,\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.database = fire.database().ref(`fridge/userId/${this.state.userId}`);\r\n    }\r\n\r\n    getDataFromDatabase() {\r\n        // if (this.state.userId === null) window.location.reload();\r\n        this.database.on('value', (snapshot) => {\r\n            let products = snapshot.val();\r\n            let downloadedFridge = [];\r\n            if (products === null) return;\r\n            products.forEach(product => {\r\n                downloadedFridge.push({\r\n                    id: product.id,\r\n                    name: product.name,\r\n                    quantity: product.quantity,\r\n                    type: product.type,\r\n                })\r\n            });\r\n            this.setState({\r\n                fridge: downloadedFridge\r\n            });\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getDataFromDatabase();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <form>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <select type=\"text\" id=\"name\" className=\"form-control\">\r\n                                <option disabled selected>Wybierz produkt</option>\r\n                                {\r\n                                    this.state.products.map(product => (\r\n                                        <option value={product.name}\r\n                                                key={product.id}>{product.name}, {product.type}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            <input id=\"quantity\" placeholder=\"ilość\" className=\"form-control\"/>\r\n                        </div>\r\n                        <div className=\"col-sm-2\">\r\n                            <button type=\"button\" className=\"btn btn-outline-success\" onClick={event => {\r\n                                event.preventDefault();\r\n                                const name = document.getElementById(\"name\").value;\r\n                                const quantity = document.getElementById('quantity').value;\r\n                                if (name === 'Wybierz produkt') return;\r\n                                const indexInState = this.state.products.findIndex(item => item.name.toLowerCase() === name.toLowerCase());\r\n                                const id = this.state.products[indexInState].id;\r\n                                const type = this.state.products[indexInState].type;\r\n                                if (/^\\d+$/.test(quantity) === false || quantity === 0) {\r\n                                    alert('wybierz ilość');\r\n                                    return;\r\n                                }\r\n                                const indexOfProduct = this.state.fridge.findIndex(item => item.name.toLowerCase() === name.toLowerCase());\r\n                                if (indexOfProduct === -1) {\r\n                                    this.state.fridge.push({\r\n                                        id: id,\r\n                                        name: name,\r\n                                        quantity: Number.parseInt(quantity),\r\n                                        type: type\r\n                                    });\r\n                                    this.forceUpdate();\r\n                                    this.database.update(this.state.fridge)\r\n                                } else {\r\n                                    // eslint-disable-next-line\r\n                                    this.state.fridge[indexOfProduct].quantity += Number.parseInt(quantity);\r\n                                    this.forceUpdate();\r\n                                    this.database.update(this.state.fridge);\r\n                                }\r\n                                document.getElementById('quantity').value = \"\";\r\n                            }\r\n                            }\r\n                            >Dodaj produkt\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default AddProduct;","import React from 'react';\r\nimport './Ingredients.css';\r\n\r\nconst Ingredients = (props) => (\r\n    <li>\r\n        <div>\r\n            <p className=\"\">{props.name}, {props.quantity}, {props.type}</p>\r\n        </div>\r\n    </li>\r\n)\r\nexport default Ingredients;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Ingredients from './Ingredients';\r\nimport './RecipesDetail.css' ;\r\n\r\nclass RecipesDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recipeId: props.id,\r\n            recipe: {\r\n                name: \"\",\r\n                description: \"\",\r\n                ingredients: []\r\n\r\n            }\r\n        };\r\n\r\n        axios.get('http://localhost:8080/recipes/' + this.state.recipeId)\r\n            .then(response => {\r\n                this.setState({recipe: response.data})\r\n            });\r\n        // localStorage.removeItem('recpieId');\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state.recipe.name}</h1>\r\n                <p>{this.state.recipe.description}</p>\r\n                <ul>\r\n                    {\r\n                        this.state.recipe.ingredients.map(ingredient => (\r\n                            <Ingredients {...ingredient}/>\r\n                        ))\r\n                    }\r\n                </ul>\r\n                <button onClick={() => alert(\"TODO: implement\")}>Wykorzystaj przepis</button>\r\n                <button onClick={() => alert(\"TODO: implement\")}>Wygeneruj listę zakupową</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default RecipesDetail;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\nimport {Link, BrowserRouter, Route} from 'react-router-dom';\r\nimport RecipesDetail from './Detail/RecipesDetail';\r\n\r\nclass Recipes extends React.Component {\r\n    state = {\r\n        recipes: [\r\n            {\r\n                id: 0,\r\n                name: ''\r\n            }\r\n        ],\r\n        nameSearchParam: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChangeSearchParam = this.handleChangeSearchParam.bind(this);\r\n        this.handleClick = this.handleClick.bind(this)\r\n\r\n\r\n        axios.get('http://localhost:8080/recipes/all')\r\n            .then(response => {\r\n                this.setState({recipes: response.data})\r\n            });\r\n\r\n    }\r\n\r\n    handleClick() {\r\n        console.log(\"wyszukuje restauracje\")\r\n        if (this.state.nameSearchParam === '') {\r\n            alert('Nie podano parametru wyszukiwania');\r\n        } else {\r\n            axios.get('http://localhost:8080/recipes/findByName?name=' + this.state.nameSearchParam)\r\n                .then(response => {\r\n                    this.setState({recipes: response.data})\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const labels = {\r\n            name: 'Name: ',\r\n            detailsButton: 'Pokaż przepis',\r\n            searchRestaurantsButton: 'Wyszukaj restauracje'\r\n        };\r\n\r\n        const recipesTableRows = this.state.recipes.map((recipe, key) =>\r\n            <tr key={key}>\r\n                <td>{recipe.name}</td>\r\n                <td>\r\n                    <Link style={{textDecoration: 'none', color: 'white'}} to={`/RecipeDetails/${recipe.id}`} id={recipe.id}>\r\n                        <button style={{textDecoration: 'none', color: 'white'}} className=\"btn btn-outline-success\">{labels.detailsButton}</button>\r\n                    </Link>\r\n                    <Route path={`/RecipeDetails/:id`}\r\n                           render={(props) => (\r\n                               <RecipesDetail {...props} id={recipe.id}/>)}\r\n                    />\r\n                </td>\r\n            </tr>\r\n        );\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <BrowserRouter>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6\">\r\n                                <input className=\"form-control\" value={this.state.nameSearchParam}\r\n                                       onChange={this.handleChangeSearchParam}/>\r\n                            </div>\r\n                            <div className=\"col-lg-3\">\r\n                                <button style={{textDecoration: 'none', color: 'white'}} className=\"btn btn-outline-success\"\r\n                                        onClick={this.handleClick}>{labels.searchRestaurantsButton}</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                {recipesTableRows}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    static showRecipeDetails(recipeId) {\r\n        alert(\"Przechodze do widoku przepisu o id: \" + recipeId + \". TODO: do zaimplementowania\");\r\n    }\r\n\r\n    handleChangeSearchParam(event) {\r\n        this.setState({nameSearchParam: event.target.value})\r\n    }\r\n}\r\n\r\nexport default Recipes\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom'\r\n\r\n\r\n// import fire from './config/Fire';\r\nimport Home from './Home';\r\n// import Login from './Login';\r\nimport firebase from \"firebase\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\r\nimport Add from \"./AddProduct\";\r\nimport Search from \"./components/Recipes/Recipes\";\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyB0oNIdCxxr6QyniIO9e1luNzR6giC4nDY\",\r\n        authDomain: \"efridge-5256e.firebaseapp.com\",\r\n        databaseURL: \"https://efridge-5256e.firebaseio.com\",\r\n        projectId: \"efridge-5256e\",\r\n        storageBucket: \"efridge-5256e.appspot.com\",\r\n        messagingSenderId: \"630139984649\",\r\n        appId: \"1:630139984649:web:d8a2d5685d0270ec\"\r\n    });\r\n}\r\n\r\n\r\nclass App extends Component {\r\n    state = {isSignedIn: false}\r\n    uiConfig = {\r\n        signInFlow: \"popup\",\r\n        signInOptions: [\r\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n            firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n        ],\r\n        callbacks: {\r\n            signInSuccess: () => false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            this.setState({isSignedIn: !!user})\r\n            localStorage.setItem('user', user.uid);\r\n            console.log(\"user\", user)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"App\">\r\n                <div className=\"area\">\r\n                    <ul className=\"circles\">\r\n                        <li/>\r\n                        <li/>\r\n                        <li/>\r\n                        <li/>\r\n                        <li/>\r\n                        <li/>\r\n                        <li/>\r\n                        <li/>\r\n                        <li/>\r\n                        <li/>\r\n                    </ul>\r\n                </div>\r\n            <div className=\"context\">\r\n                    {this.state.isSignedIn ? (\r\n                        <BrowserRouter>\r\n                            <Switch>\r\n                            <span>\r\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n\r\n                                    <button type=\"button\" className=\"btn btn-outline-info\">\r\n                                        <Link style={{textDecoration: 'none', color: 'white'}}\r\n                                              to=\"/profile\">Twój profil</Link>\r\n                                    </button>\r\n                                    <button type=\"button\" className=\"btn btn-outline-info\">\r\n                                        <Link style={{textDecoration: 'none', color: 'white'}} to=\"/your-fridge\">\r\n                                            Podgląd Twojej lodówki</Link>\r\n                                        </button>\r\n                                        <button type=\"button\" className=\"btn btn-outline-info\">\r\n                                    <Link style={{textDecoration: 'none', color: 'white'}} to=\"/add-product\">Dodaj produkt do lodówki</Link>\r\n                                        </button>\r\n                                        <button type=\"button\" className=\"btn btn-outline-info\">\r\n                                    <Link style={{textDecoration: 'none', color: 'white'}} to=\"/RecipeDetails\">Wyszukaj dostępny przepis</Link>\r\n                                        </button>\r\n                                    <button type=\"button\" className=\"btn btn-outline-warning\" onClick={() => {\r\n                                        firebase.auth().signOut();\r\n                                        localStorage.removeItem('user');\r\n                                    }}>\r\n                                        Wyloguj!\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n\r\n                                </div>\r\n                            <h1>Witaj {firebase.auth().currentUser.displayName}!</h1>\r\n                                <Route exact path=\"/profile\" component={Home}/>\r\n                                <Route exact path=\"/your-fridge\" component={Home}/>\r\n                                <Route exact path=\"/add-product\" component={Add}/>\r\n                                <Route path=\"/RecipeDetails\" component={Search}/>\r\n\r\n                            </span>\r\n                            </Switch>\r\n                        </BrowserRouter>\r\n                    ) : (\r\n                        <div>\r\n                            <StyledFirebaseAuth\r\n                                uiConfig={this.uiConfig}\r\n                                firebaseAuth={firebase.auth()}\r\n                            />\r\n                            {/*<button onClick={this.Login}>Register</button>*/}\r\n                        </div>\r\n                    )}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}